import uvage
import random
camera = uvage.Camera(800,600)
squishtest = uvage.from_image(400,450,"pineapple.png")
arrows = uvage.load_sprite_sheet("Arrows.png",4,2)
squishtest.width = 500
base_arrows_list = [
    ["left arrow", uvage.from_image(250,500,arrows[0]), False, False],
    ["up arrow", uvage.from_image(450,500,arrows[2]), False, False],
    ["right arrow", uvage.from_image(550,500,arrows[4]), False, False],
    ["down arrow", uvage.from_image(350,500,arrows[6]), False, False]
]
falling_arrows_list = [
    ["left arrow", uvage.from_image(250,0,arrows[0]), False, False],
    ["up arrow", uvage.from_image(450,-300,arrows[2]), False, False],
    ["right arrow", uvage.from_image(550,-600,arrows[4]), False, False],
    ["down arrow", uvage.from_image(350,-900,arrows[6]), False, False],
]
def falling_arrows():
    for arrow in falling_arrows_list:
        if not arrow[2]:
            arrow[1].y += 5
            camera.draw(arrow[1])
        if arrow[0] == "left arrow":
            left_arrow = base_arrows_list[0]
            if arrow[1].y in range(490,520) and left_arrow[2]:
                arrow[2] = True
        if arrow[0] == "up arrow":
            up_arrow = base_arrows_list[1]
            if arrow[1].y in range(490,520) and up_arrow[2]:
                arrow[2] = True
        if arrow[0] == "right arrow":
            right_arrow = base_arrows_list[2]
            if arrow[1].y in range(490,520) and right_arrow[2]:
                arrow[2] = True
        if arrow[0] == "down arrow":
            down_arrow = base_arrows_list[3]
            if arrow[1].y in range(490,520) and down_arrow[2]:
                arrow[2] = True
def generate_feedback(arrow,text):
    feedback = uvage.from_text(arrow.x,arrow.y,text,20,"orange")
    camera.draw(feedback)
def base_arrows():
    left_arrow = base_arrows_list[0]
    up_arrow = base_arrows_list[1]
    right_arrow = base_arrows_list[2]
    down_arrow = base_arrows_list[3]
    for arrow in base_arrows_list:
        camera.draw(arrow[1])
    if uvage.is_pressing("left arrow"):
        left_arrow[1].image = arrows[1]
        left_arrow[2] = True
    if not uvage.is_pressing("left arrow"):
        left_arrow[1].image = arrows[0]
        left_arrow[2] = False
    if uvage.is_pressing("up arrow"):
        up_arrow[1].image = arrows[3]
        up_arrow[2] = True
    if not uvage.is_pressing("up arrow"):
        up_arrow[1].image = arrows[2]
        up_arrow[2] = False
    if uvage.is_pressing("right arrow"):
        right_arrow[1].image = arrows[5]
        right_arrow[2] = True
    if not uvage.is_pressing("right arrow"):
        right_arrow[1].image = arrows[4]
        right_arrow[2] = False
    if uvage.is_pressing("down arrow"):
        down_arrow[1].image = arrows[7]
        down_arrow[2] = True
    if not uvage.is_pressing("down arrow"):
        down_arrow[1].image = arrows[6]
        down_arrow[2] = False
def tap_check(key):
    global press_cancel
    global time
    if uvage.is_pressing(key):
        time += 1 / 30
        if time > 0.5:
            press_cancel = True
    if not uvage.is_pressing(key):
        time = 0
        press_cancel = False
    return press_cancel

def tick():
    camera.draw(squishtest)
    base_arrows()
    falling_arrows()
    camera.display()
    camera.clear("White")
uvage.timer_loop(30, tick)
